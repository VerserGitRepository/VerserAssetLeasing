@model  VerserAssetleasingServiceInterface.Models.SalesForceOpportunity
@{
    ViewBag.Title = "CostModelServicePopup";
}
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.11.0/umd/popper.min.js"></script>
<script src="~/Scripts/bootstrap-multiselect.js"></script>
<link href="~/Content/bootstrap-multiselect.css" rel="stylesheet" />
@using (Ajax.BeginForm("CreateSalesForceOpportunity", "CostModelBuilder", new AjaxOptions { HttpMethod = "POST", OnSuccess = "OnSuccess", OnFailure = "OnFailure" }))
{
    <div class="panel-heading panel-title" style="background-color:lightgray">NEW SALESFORCE REQUEST</div>

    <div class="panel-body">
        <div class="row">

            <div class="form-group col-md-6">
                @Html.Label("Customer Name")
                @Html.DropDownListFor(m => m.Customer, Model.AccountNames, "Customer Account", new { @class = "form-control ", @id = "ddlAccount", @multiple = "multiple" })
                @Html.ValidationMessageFor(model => model.Customer, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-md-6">
                @Html.Label("Site Address")
                @Html.TextBoxFor(x => x.SiteAddress, new { @class = "form-control required", @id = "txtAddress" })
                @Html.ValidationMessageFor(model => model.SiteAddress, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="form-group col-md-6">
                @Html.Label("Customer Contact Name")
                @Html.TextBoxFor(x => x.CustomerContactName, new { @class = "form-control required", @id = "txtCustomerName" })
                @Html.ValidationMessageFor(model => model.CustomerContactName, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-md-6">
                @Html.Label("Opportunity Name")
                @Html.DropDownListFor(m => m.OpportunityName, Model.OpportunityNames, "Opportunity", new { @class = "form-control ", @id = "ddlOpportunity", @multiple = "multiple" })
                @Html.ValidationMessageFor(model => model.OpportunityName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">

            <div class="form-group col-md-6">
                @Html.Label("Sales Manager")

                @*@Html.TextBoxFor(x => x.SalesManager, new { @class = "form-control required", @id = "txtSalesManager" })*@
                @Html.DropDownListFor(m => m.SalesManager, Model.JBHIFiCostModelQuoteRequest.SalesManagerList, "Sales Manager", new { @class = "form-control ", @id = "txtSalesManager", @multiple = "multiple" })
                @Html.ValidationMessageFor(model => model.SalesManager, "", new { @class = "text-danger" })


            </div>
            <div class="form-group col-md-6">
                @Html.Label("EMail")
                @Html.TextBoxFor(x => x.Email, new { @class = "form-control required", @id = "txtEmail" })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="form-group col-md-6">
                @Html.Label("Project Manager")
                @Html.DropDownListFor(m => m.ProjectManager, Model.JBHIFiCostModelQuoteRequest.ProjectManagerList, "Project Manager", new { @class = "form-control ", @id = "txtProjectManager", @multiple = "multiple" })
                @*@Html.TextBoxFor(x => x.ProjectManager, new { @class = "form-control required", @id = "txtProjectManager" })*@
                @Html.ValidationMessageFor(model => model.ProjectManager, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-md-6">
                @Html.Label("Start Date")
                @Html.TextBoxFor(x => x.StartDate, new { @type = "date", @class = "form-control datepicker required", @id = "txtStartDate" })
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row">
            <div class="form-group col-md-6">
                <label>Status</label>

                @Html.DropDownListFor(Model => Model.Status, new List<SelectListItem>
                    { new SelectListItem {Text="Requested",Value="1" },
                    new SelectListItem {Text="Active",Value="2" },
                    new SelectListItem {Text="Completed",Value="3" },
                     new SelectListItem {Text="Draft",Value="3" },
                    }, "Status", new { @class = "form-control" , @id = "txtStatus"})
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                @*</div>*@
            </div>

        </div>
    </div>

    <div class="footer">
        <input type="submit" class="btn-primary btn-lg" value="CREATE OPPORTUNITY" id="btnCreateSalesForceOppn" />
    </div>
}


<script>

    $(document).ready(function () {
        $('#txtProjectManager').removeAttr('multiple')
        $('#txtProjectManager').multiselect('rebuild');

        $('#txtSalesManager').removeAttr('multiple')
        $('#txtSalesManager').multiselect('rebuild');

        $('#ddlOpportunity').removeAttr('multiple')
        $('#ddlOpportunity').multiselect('rebuild');

        $('#ddlAccount').removeAttr('multiple')
        $('#ddlAccount').multiselect('rebuild');

        });

    var uniqueId = 1;
    function OnSuccess(data) {

        $("#btnCreateSalesForceOppn").attr('disabled', true);


        var str = data.split('-')[0];
        var strId = data.split('-')[1];
        var sfId = data.split('-')[2];
        str = str.replace("Salesforce Opportunity has been successfully created with Opportunity Number :", "");
        strId = strId.replace("Id:", "");
        sfId = sfId.replace("salesForceUniqueId:", "");
        $("#txtSalesForceOpportunity").text('Opportunity:' + str);
        $("#hdnQuoteId").val(strId);
        $("#hdnSalesForceId").val(sfId);
        $("#btnSubmit").val("ADD SERVICE");
        $(".jconfirm").hide();
    }
    function OnFailure() {
        alert('Error has occurred in the request.');
    }
    $('#txtProjectManager').multiselect({
        includeSelectAllOption: false,
        maxHeight: 250,
        buttonWidth: '280px',
        enableFiltering: true,
        enableCaseInsensitiveFiltering: true
    });
    $('#txtSalesManager').multiselect({
        includeSelectAllOption: false,
        maxHeight: 250,
        buttonWidth: '280px',
        enableFiltering: true,
        enableCaseInsensitiveFiltering: true,
    });
    $('#ddlOpportunity').multiselect({
        includeSelectAllOption: false,
        maxHeight: 250,
        buttonWidth: '280px',
        enableFiltering: true,
        enableCaseInsensitiveFiltering: true
    });
    $('#ddlAccount').multiselect({
        includeSelectAllOption: false,
        maxHeight: 250,
        buttonWidth: '280px',
        enableFiltering: true,
        enableCaseInsensitiveFiltering: true,
    });
</script>

