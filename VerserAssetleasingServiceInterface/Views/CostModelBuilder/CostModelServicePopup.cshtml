@model  VerserAssetleasingServiceInterface.Models.SalesForceOpportunity
@{
    ViewBag.Title = "CostModelServicePopup";
}
<script src="https://code.jquery.com/jquery-3.3.1.js"></script>
<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-ajax-unobtrusive/3.2.6/jquery.unobtrusive-ajax.js"></script>
@using (Ajax.BeginForm("CreateSalesForceOpportunity", "CostModelBuilder", new AjaxOptions { HttpMethod = "POST", OnSuccess = "OnSuccess", OnFailure = "OnFailure" }))
{
    <div class="panel-heading panel-title">Basic Info</div>

    <div class="panel-body">
        <div class="row">

            <div class="form-group col-md-6">
                @Html.Label("Customer Name")
                @Html.TextBoxFor(x => x.Customer, new { @class = "form-control required", @id = "txtCustomer" })
                @Html.ValidationMessageFor(model => model.Customer, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-md-6">
                @Html.Label("Site Address")
                @Html.TextBoxFor(x => x.SiteAddress, new { @class = "form-control required", @id = "txtAddress" })
                @Html.ValidationMessageFor(model => model.SiteAddress, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="form-group col-md-6">
                @Html.Label("Customer Contact Name")
                @Html.TextBoxFor(x => x.CustomerContactName, new { @class = "form-control required", @id = "txtCustomerName" })
                @Html.ValidationMessageFor(model => model.CustomerContactName, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-md-6">
                @Html.Label("Opportunity Name")
                @Html.TextBoxFor(x => x.OpportunityName, new { @class = "form-control required", @id = "txtOpportunityName" })
                @Html.ValidationMessageFor(model => model.OpportunityName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="form-group col-md-6">
                @Html.Label("EMail")
                @Html.TextBoxFor(x => x.Email, new { @class = "form-control required", @id = "txtEmail" })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-md-6">
                @Html.Label("Start Date")
                @Html.TextBoxFor(x => x.StartDate, new { @type = "date", @class = "form-control datepicker required", @id = "txtStartDate" })
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>

    </div>

    <div class="footer">
        <input type="submit" class="btn-primary btn-lg" value="Add Opportunity" id="btnCreateSalesForceOppn" />
    </div>
}
<script>
    var uniqueId = 1;
    function OnSuccess(data) {

        $("#btnCreateSalesForceOppn").attr('disabled', true);


        var str = data.split('-')[0];
        var strId = data.split('-')[1];
        str = str.replace("Salesforce Opportunity has been successfully created with Opportunity Number :", "");
        strId = strId.replace("Id:", "");
        $("#txtSalesForceOpportunity").text('Opportunity:' + str);
        $("#hdnQuoteId").val(strId);
        $("#btnSubmit").val("ADD SERVICE");
        $(".jconfirm").hide();
    }
    function OnFailure() {
        alert('Error has occurred in the request.');
    }
</script>

